---
import CourseLayout from '../layouts/CourseLayout.astro'
import Course from '../components/Course.astro'

// get all the Content
const allContent = import.meta.glob('../pages/Inhalt/**/*.md', {
  eager: true,
})
// Process content into a structured array
const content = Object.values(allContent).map(
  ({ frontmatter, file }) => {
    return {
      chapter: {
        title: frontmatter.chapter,
        num: frontmatter.chapterNum,
      },
      lesson: {
        title: frontmatter.lesson,
        type: frontmatter.type,
        num: frontmatter.num,
      },
      path: file.split('Inhalt')[1],
    }
  }
)

// Step 1: Group lessons by chapter
const groupedChapters = Object.values(
  content.reduce((acc, { chapter, lesson, path }) => {
    const chapterKey = chapter.num
    if (!acc[chapterKey]) {
      acc[chapterKey] = { ...chapter, lessons: [] }
    }
    acc[chapterKey].lessons.push({ ...lesson, path })
    return acc
  }, {})
)
groupedChapters.sort((a, b) => a.num - b.num)
groupedChapters.forEach((chapter) => {
  chapter.lessons.sort((a, b) => a.num - b.num)
})
---

<CourseLayout>
  <Course content={groupedChapters} />
</CourseLayout>
